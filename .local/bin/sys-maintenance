#!/bin/sh

# **
# system maintenance script
#
# updates, cleans orphans and other cache stuff
# *

# -----------------------------------------------------------------------------
# preamble
# -----------------------------------------------------------------------------

# load utilities
# shellcheck disable=1090
. "$LIBSHUTILS"

# check if running with elevated priviledges; elevate if not
! is_su && elevate_privs "$0" "$0"

# -----------------------------------------------------------------------------
# functions
# -----------------------------------------------------------------------------

clear_cache() {
    CACHE_FOLDER="$HOME/.cache"
    [ -d "$CACHE_FOLDER" ] && rm -fr "$CACHE_FOLDER"
}

print_cached_pkgs() {
    case $1 in
    arch) CACHED_PKGS_FOLDER="/var/cache/pacman/pkg" ;;
    void) CACHED_PKGS_FOLDER="/var/cache/xbps" ;;
    esac

    printf "amount of cached packages: %s | size: %s\n" \
        "$(find $CACHED_PKGS_FOLDER | wc -l)" \
        "$(du -hs $CACHED_PKGS_FOLDER)"
}

# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------

# clear ~/.cache folder
clear_cache

# arch-based
if [ -x "$(command -v "pacman")" ]; then
    # display cached packages (after)
    print_cached_pkgs "arch"

    # update the system
    pacman -Syyu --noconfirm

    # clear pkg cache
    paccache -r
    paccache -rk1 -ruk0
    pacman -Scc

    # clear orphans
    pacman -Qdqt | pacman -Rns -

    # display cached packages (after)
    print_cached_pkgs "arch"

# void
elif [ -x "$(command -v "xbps-install")" ]; then
    # display cached packages (before)
    print_cached_pkgs "xbps"

    # clear pkg cache
    xbps-remove -FORfovy
    # clear old kernels
    vkpurge rm all

    # display cached packages (after)
    print_cached_pkgs "xbps"
else
    printf 'no maintenance script for this system\n'
fi
