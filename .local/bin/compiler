#!/bin/sh

# runs commands based on extention/shebang

# note: .tex files which you wish to compile with XeLaTeX should have the
# string "xelatex" somewhere in a comment/command in the first 5 lines

FILE=$(readlink -f "$1")
DIR=${FILE%/*}
BASE="${FILE%.*}"
EXT="${FILE##*.}"

cd "$DIR" || exit 1

textype() {
    command="xelatex"
    $command --output-directory="$DIR" "$BASE" &&
        grep -i addbibresource "$FILE" >/dev/null &&
        biber --input-directory "$DIR" "$BASE" &&
        $command --output-directory="$DIR" "$BASE" &&
        $command --output-directory="$DIR" "$BASE"
}

case "$EXT" in
[0-9]) preconv "$FILE" | refer -PS -e | groff -mandoc -T pdf >"$BASE".pdf ;;
c) cc "$FILE" -o "$BASE" && "$BASE" ;;
md) if [ -x "$(command -v lowdown)" ] >/dev/null; then
    lowdown -d nointem -e super "$FILE" -Tms | groff -mpdfmark -ms -kept >"$BASE".pdf
elif [ -x "$(command -v groffdown)" ] >/dev/null; then
    groffdown -i "$FILE" | groff >"$BASE.pdf"
else
    pandoc "$FILE" --pdf-engine=xelatex -o "$BASE".pdf
fi ;;
mom) preconv "$FILE" | refer -PS -e | groff -mom -kept -T pdf >"$BASE".pdf ;;
ms) preconv "$FILE" | refer -PS -e | groff -me -ms -kept -T pdf >"$BASE".pdf ;;
py) python "$FILE" ;;
rs) cargo build ;;
sent) setsid -f sent "$FILE" 2>/dev/null ;;
tex) textype "$FILE" && clean-build "$FILE" ;;
*) sed 1q "$FILE" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$FILE" ;;
esac
