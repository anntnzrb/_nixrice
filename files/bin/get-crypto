#!/bin/sh

# get-crypto --- Retrieve price information about given cyrptocurrency

# Commentary:

# Based off Luke Smith's sb-price script; tweaked by anntnzrb

# Code:

# shellcheck disable=SC2006,SC2312

# ----------------------------------------------------------------------------
# preamble / functions
# ----------------------------------------------------------------------------

usage() {
    tee <<! >&2
Usage:
  $ get-crypto CRYPTO [CURRENCY]

Examples:
  $ get-crypto ada eur
  $ get-crypto eth
!

    exit 1
}

# checks
test ${#} -eq 0 && usage
test ${#} -gt 2 && usage
! ping -q -c 1 'example.com' >/dev/null 2>&1 \
    && printf 'N/A\n' >&2 && exit 1

update_price() {
    curl -Sfs "${currency}.rate.sx/1${crypto}" > "${pricefile}"
    curl -Sfs "${currency}.rate.sx/${crypto}${interval}" > "${chartfile}"
}

# ----------------------------------------------------------------------------
# main
# ----------------------------------------------------------------------------

# use $4 as currency, if not passed in use "usd" as default
crypto="${1}"
currency="${2:-usd}"
interval='@14d'

dir='/tmp/crypto-prices'
pricefile="${dir}/${crypto}-${currency}"
chartfile="${dir}/${crypto}-${currency}-chart"

# create directory if not present
test -d "${dir}" || mkdir -p "${dir}"

# update the price only if it hasn't been updated today
test "`stat -c %x "${pricefile}" 2>/dev/null | cut -d' ' -f1`" != "`date '+%Y-%m-%d'`" \
    && update_price "${crypto}"

case "${currency}" in
    usd) curr_symb="$" ;;
    gbp) curr_symb="£" ;;
    eur) curr_symb="€" ;;
    *) curr_symb="❔"  ;;
esac

case "${crypto}" in
    ada) crypto_symb="₳" ;;
    btc) crypto_symb="₿" ;;
    eth) crypto_symb="Ξ" ;;
    *) crypto_symb="❔"  ;;
esac

printf "${crypto_symb} ↔ ${curr_symb}%0.2f\\n" "`cat "${pricefile}"`"

exit 0
