# terminal emulator
super + Return
  $TERMINAL

# text editor
# ... but just as a generic way to call it. this is a terminal-based text
# editor, set by $EDITOR variable
super + v
  $TERMINAL -e $EDITOR

# browser
# a graphical browser, set by $BROWSER
super + w
  $BROWSER

# applicaction launcher
# a run dialog & app launcher precisely
super + d
  dmenu_run -i -p 'summon:'

# file manager
# a graphical file manager, set by $FILE
super + e
  $FILE

# rss feed
# CLI rss feeder
super + n
  $TERMINAL -e newsboat

# audio
# CLI to control PulseAudio
super + a
  $TERMINAL -e pulsemixer

# mute
XF86AudioMute
  pamixer -t && pkill -RTMIN+1 dwmblocks

# increase/decrease
XF86Audio{Lower,Raise}Volume
  pamixer -{d,i} 5 && pkill -RTMIN+1 dwmblocks

# brightness
# increase/decrease
XF86MonBrightness{Down,Up}
  xbacklight -{dec,inc} 10 && pkill -RTMIN+2 dwmblocks

# system monitor
# CLI system activity monitor
super + shift + Escape
  $TERMINAL -e $SYS_MONITOR

# password selector dropdown
super + p
  passmenu

# display selector dropdown
super + F3
  displayselect

# emoji / unicode list dropdown
super + grave
  dmenuunicode

# screenshot utility dropdown
Print
  maimpick

# system options dropdown
super + shift + x
  sysfns

# network tools
# CLI for Network Manager
super + F12
  $TERMINAL -e sudo nmtui

# torrent tools
# toggle the transmission daemon with F6 and launch the cli with F7
super + F{6,7}
 {td-toggle,torwrap}

# mouting tools
super + F{9,10}
  {dmenumount,dmenuumount}

# kill currently focused window
# an alternative to window manager's built-in window close functionality; this
# should be used as last resource
alt + F4
  kill -15 "$(xdotool getactivewindow getwindowpid)"

# toggle compositor
# Picom is the compistor i currently use, i turn it off for games; with this
# bind i'm able to toggle in on the fly
super + F11
  toggle-cmd 'picom'

# kill Xorg session
# meant to kill the x server in an emergency situation
super + control + alt + Escape
  pkill -15 'Xorg'
