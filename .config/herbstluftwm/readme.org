#+title:    annt's herbstluftwm
#+author:   anntnzrb
#+language: en
#+property: header-args :comments org :results silent :tangle no

* Table of Contents :toc:noexport:
- [[#introduction][Introduction]]
- [[#how-to-use-this-file][How to use this file]]
- [[#herbstluftwm][herbstluftwm]]
  - [[#preface][Preface]]
  - [[#globals][Globals]]
  - [[#tags-workspaces][Tags (Workspaces)]]
  - [[#monitors][Monitors]]
  - [[#settings][Settings]]
  - [[#bindings][Bindings]]
  - [[#appearance][Appearance]]
  - [[#rules][Rules]]
- [[#panel-bar][Panel (Bar)]]

* Introduction

This file is a literal configuration file for [[https://herbstluftwm.org/][herbstluftwm]], a
/manual tiling window manager/ for /X/.

/GNU Emacs/' /Org Mode/ powers this configuration by writing the contents of
the many source blocks found on this document (not all of them) into the
corresponding files. This means all configurations should be modified from this
file and not externally from the /tangled/ files.

This configuration of /herbstluftwm/ uses [[https://github.com/baskerville/sxhkd][sxhkd]] for keybind configurations,
separating these from the window manager's own configuration allows me to:

- Isolate my window manager’s configuration from its keybinds
  - This is default on [[https://github.com/baskerville/bspwm][bspwm]]
- Take advantage of /sxhkd/'s syntax
  - /chords/

* How to use this file

/Org/ allows executing source code blocks with =org-ctrl-c-ctrl-c=
(usually bound to =C-c C-c=).

Executing the following source code block will:

- Tangle this file (write every need file)
- Restart (fully) /herbstluftwm/
- Send the reload signal to =sxhkd=

*NOTE*: The configuration will not be updated if you don't execute the
following source code block; this is the only way to update the settings.

#+begin_src emacs-lisp :tangle no
(when (y-or-n-p "Update configurations?")
  (require 'ob-tangle) ;; needed to load Org
  (org-babel-tangle)   ;; tangle all files declared in this doc

  ;; reload HLWM & sxhkd
  (shell-command-to-string "pkill -USR1 sxhkd")
  (shell-command-to-string "herbstclient wmexec")

  ;; notify
  (message "File was tangled and sxhkd was reloaded..."))
#+end_src

* herbstluftwm

This section contains the window manager's configuration written in /GNU Bash/.

=herbstluftwm='s configuration file (=autostart=) must be an executable file;
this comment will be appended in order to create the file itself.

#+begin_src sh :tangle autostart :shebang "#!/usr/bin/env bash\n"
# autostart --- annt's herbstluftwm

set -euo pipefail
#+end_src

** Preface

Preliminary settings to set before anything else.

#+begin_src sh :tangle autostart
hc() {
    # **
    # since the `herbstclient` command is a lenghty, this function is used
    # instead.
    # *

    herbstclient "$@"
}
#+end_src

Clean up mouse & keyboards binds before setting them, this is done in purpose
to be effective on reload or when the window manager restarts.

#+begin_src sh :tangle autostart
hc emit_hook reload # force early reload
hc unlock           # unlock HLWM as it launches locked on X boot
hc unrule -F        # reset rules

# reset binds
hc keyunbind -F
hc mouseunbind --all
#+end_src

** Globals

- Set the /Super/ key /a.k.a/ "/Windows/" key

#+begin_src sh :tangle autostart
Mod=Mod4

hc set tree_style '╾│ ├└╼─┐' # TODO: explore more styles
#+end_src

** Tags (Workspaces)

- Declare tags from 1 to 9, name them as the literal numbers

#+begin_src sh :tangle autostart
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )
#+end_src

- Set previously declared tags and assign the /Super + =n= / keybinds, where
  =n= is the tag number

#+begin_src sh :tangle autostart
hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done
#+end_src

** Monitors

#+begin_src sh :tangle autostart
# detect automatically, else HLWM treats as one big display if multiple monitors are present
# keep it at last
hc detect_monitors
#+end_src

** Settings

#+begin_src sh :tangle autostart
hc set focus_follows_mouse true
#+end_src

** Bindings

*** Mouse binds

#+begin_src sh :tangle autostart
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize
#+end_src

*** Keyboards binds

Keyboards keybinds are not handled in the =autostart= file, refer to the
=sxhkdrc_hlwm= file for those.

**** Control & State

#+begin_src sh :tangle sxhkdrc_hlwm
super + shift + q ; {q, r}
  herbstclient {close_or_remove,reload}

# states
super + shift + s ; {f,space}
  herbstclient {fullscreen toggle,set_attr clients.focus.floating toggle}
#+end_src

**** Focusing

#+begin_src sh :tangle sxhkdrc_hlwm
# focus clients (Vi binds)
super + {h,j,k,l}
  herbstclient focus {left,down,up,right}

# focus clients (arrow binds)
super + {Left,Down,Up,Right}
  herbstclient focus {left,down,up,right}

# cycle thru the clients
super + {_,shift} + Tab
  herbstclient cycle_all {+,-}1

# cycle thru monitors
super + {_,shift} + BackSpace
  herbstclient cycle_monitor {+,-}1
#+end_src

**** Moving clients

#+begin_src sh :tangle sxhkdrc_hlwm
# Vi binds
super + shift + {h,j,k,l}
  herbstclient shift {left,down,up,right}

# arrow binds
super + shift + {Left,Down,Up,Right}
  herbstclient shift {left,down,up,right}
#+end_src

**** Layouts

#+begin_src sh :tangle sxhkdrc_hlwm
super + space ; {space,h,v,t,b}
  herbstclient {cycle_layout,split h,split v,split top, split bottom}
#+end_src

** Appearance

#+begin_src sh :tangle autostart
# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222cc'
hc set frame_border_normal_color '#101010cc'
hc set frame_bg_normal_color '#565656aa'
hc set frame_bg_active_color '#345F0Caa'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.title_height 15
hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 2  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#345F0Cef'
hc attr theme.title_color '#ffffff'
hc attr theme.normal.color '#323232dd'
hc attr theme.urgent.color '#7811A1dd'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.active.outer_width 1
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0
#+end_src

** Rules

#+begin_src sh :tangle autostart
hc rule focus=on             # normally focus new clients
hc rule floatplacement=smart
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)'     floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG'                      focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
#+end_src

* Panel (Bar)

#+begin_src sh :tangle autostart
panel=${HOME}/.config/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
#+end_src
