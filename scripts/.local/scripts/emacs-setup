#!/bin/sh

# emacs-setup --- Emacs from source setup

# Commentary:

# Installs GNU Emacs from source.
# Optionally build with native compilation if `libgccjit` is somehow easily
# available on the target system.

# References: https://github.com/emacs-mirror/emacs

# shellcheck disable=2046
# disable for numbers instead of strings

# -----------------------------------------------------------------------------
# variables
# -----------------------------------------------------------------------------

branch='emacs-28'
flags="--with-native-compilation \
    --with-mailutils \
    --with-sound=yes \
    --without-compress-install \
    --without-gsettings \
    --without-gconf"

# -----------------------------------------------------------------------------
# functions
# -----------------------------------------------------------------------------

clone_emacs() {
    # **
    # Clones GNU Emacs from repository.
    # *

    printf 'Cloning Emacs repository...\n'
    fast-git-clone -b "${branch}" 'https://github.com/emacs-mirror/emacs' '/tmp/emacs/'

    cd '/tmp/emacs/' || { err 'Cannot cd into dir.' && exit 1; }
}

configure() {
    # **
    # Configures GNU Emacs autoconf settings.
    # *

    ./autogen.sh
    ./configure ${flags}

    printf '\n--------------------------------------------------------------\n'
    printf 'Resuming in 10 seconds...\n'
    printf 'Please review the settings shown above and check for errors.\n'
    printf '--------------------------------------------------------------\n'
    sleep 10
}

# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------

printf 'Installing dependencies...\n'
# Debian-like
if installed-p 'apt-get'; then
    # quit if non-root
    ! root-p && err 'This scripts needs root access.' && exit 1

    apt install -y \
        'autoconf' \
        'gnutls-dev' \
        'libgccjit-10-dev' \
        'libgif-dev' \
        'libgtk-3-dev' \
        'libjpeg-dev' \
        'libncurses-dev' \
        'libpng-dev' \
        'libtiff-dev' \
        'libxpm-dev' \
        'texinfo'

    clone_emacs
    configure

    make -j$(nproc)
    make -j$(nproc) install

elif installed-p 'pacman'; then
    sudo pacman --needed --noconfirm -Syu 'base-devel' 'libgccjit'

    clone_emacs
    configure

    make -j$(nproc)
    sudo make -j$(nproc) install
fi

# cleanup
unset -v branch flags
